{"version":3,"sources":["ChatHeader.js","Message.js","features/userSlice.js","features/appSlice.js","firebase.js","Chat.js","SidebarChannel.js","Sidebar.js","logoIcon.svg","Login.js","App.js","app/store.js","index.js"],"names":["ChatHeader","channelName","className","type","placeholder","Message","timestamp","user","message","Avatar","src","photo","displayName","Date","toDate","toUTCString","userSlice","createSlice","name","initialState","reducers","login","state","action","payload","logout","actions","selectUser","appSlice","channelId","setChannelInfo","selectChannelId","app","selectChannelName","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Chat","useSelector","useState","input","setInput","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","fontsize","value","disabled","onChange","e","target","onClick","preventDefault","add","FieldValue","serverTimestamp","SidebarChannel","id","dispatch","useDispatch","Sidebar","channels","setChannels","channel","class","prompt","fontSize","signOut","uid","substring","Login","LogoIcon","alt","Button","signInWithPopup","catch","error","alert","App","onAuthStateChanged","authUser","photoURL","email","configureStore","reducer","userReducer","appReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.794c99c8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ChatHeader.css';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nfunction ChatHeader({ channelName }) {\r\n  return (\r\n    <div className=\"chatHeader\">\r\n      <div className=\"chatHeader__left\">\r\n        <h3>\r\n          <span className=\"chatHeader__hash\">#</span>\r\n          {channelName}\r\n        </h3>\r\n      </div>\r\n      <div className=\"chatHeader__right\">\r\n        <NotificationsIcon />\r\n        <LocationOnIcon />\r\n        <PeopleAltIcon />\r\n        <div className=\"chatHeader__search\">\r\n          <input type=\"text\" placeholder=\"search\" />\r\n          <SearchIcon />\r\n        </div>\r\n        <SendIcon />\r\n        <HelpIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatHeader;\r\n","import React from 'react';\r\nimport './Message.css';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nfunction Message({ timestamp, user, message }) {\r\n  return (\r\n    <div className=\"message\">\r\n      <Avatar src={user.photo} />\r\n      <div className=\"message__info\">\r\n        <h4>\r\n          {user.displayName}\r\n          <span className=\"message__timestamp\">\r\n            {new Date(timestamp?.toDate()).toUTCString()}\r\n          </span>\r\n        </h4>\r\n        <p>{message}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import { createSlice } from '@reduxjs/toolkit';\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n  },\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n});\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    channelId: null,\r\n    channelName: null,\r\n  },\r\n  reducers: {\r\n    setChannelInfo: (state, action) => {\r\n      state.channelId = action.payload.channelId;\r\n      state.channelName = action.payload.channelName;\r\n    },\r\n  },\r\n});\r\nexport const { setChannelInfo } = appSlice.actions;\r\n\r\nexport const selectChannelId = (state) => state.app.channelId;\r\nexport const selectChannelName = (state) => state.app.channelName;\r\n\r\nexport default appSlice.reducer;\r\n","// step1 npm i firebase\r\n// step2 import firebase from 'firestore'\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBCAmu_lRX7ZbHcg_pOhwp8BDZBQDDwqB8',\r\n  authDomain: 'discord-jmr-clone.firebaseapp.com',\r\n  projectId: 'discord-jmr-clone',\r\n  storageBucket: 'discord-jmr-clone.appspot.com',\r\n  messagingSenderId: '489741473472',\r\n  appId: '1:489741473472:web:aced0ca25875db8da03f25',\r\n};\r\n// step3: Initialize firebaseApp\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n// console.log('firebasedb->>>', db);\r\nconst auth = firebase.auth();\r\n// for GOOGLE auth\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;","import React, { useEffect, useState } from 'react';\r\nimport './Chat.css';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport ChatHeader from './ChatHeader';\r\nimport Message from './Message';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport { selectChannelId, selectChannelName } from './features/appSlice';\r\nimport  db  from './firebase';\r\n\r\n\r\nfunction Chat() {\r\n  const user = useSelector(selectUser);\r\n  const channelId = useSelector(selectChannelId);\r\n  const channelName = useSelector(selectChannelName);\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  useEffect(() => {\r\n    if (channelId) {\r\n      db.collection('channels')\r\n        .doc(channelId)\r\n        .collection('messages')\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [channelId]);\r\n\r\nconst sendMessage = (e)=>{\r\n  e.preventDefault();\r\n  db.collection('channels').doc(channelId).collection('messages').add({\r\n    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    message: input,\r\n    user: user,\r\n  })\r\n  setInput('');\r\n}\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <ChatHeader channelName={channelName} />\r\n      <div className=\"chat__messages\">\r\n        {messages.map((message) => {\r\n         return  <Message \r\n           timestamp={message.timestamp}\r\n           message={message.message}\r\n           user={message.user}\r\n           />;\r\n        })}\r\n      </div>\r\n      <div className=\"chat__input\">\r\n        <AddCircleIcon fontsize=\"large\" />\r\n        <form action=\"\">\r\n          <input\r\n            value={input}\r\n            disabled={!channelId}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            type=\"text\"\r\n            placeholder={`Message #${channelName}`}\r\n          />\r\n          <button\r\n            disabled={!channelId}\r\n            className=\"chat__inputButton\"\r\n            type=\"submit\"\r\n            onClick={sendMessage}\r\n          >\r\n            Send Message\r\n          </button>\r\n        </form>\r\n        <div className=\"chat__inputIcons\">\r\n          <CardGiftcardIcon fontsize=\"large\" />\r\n          <GifIcon fontsize=\"large\" />\r\n          <EmojiEmotionsIcon fontsize=\"large\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setChannelInfo } from './features/appSlice';\r\nimport './SidebarChannel.css';\r\n\r\nfunction SidebarChannel({ id, channelName }) {\r\n  const dispatch = useDispatch();\r\n  // console.log(\"###\",channelName);\r\n  return (\r\n    <div\r\n      className=\"sidebarChannel\"\r\n      onClick={() =>\r\n        dispatch(\r\n          setChannelInfo({\r\n            channelId: id,\r\n            channelName: channelName,\r\n          })\r\n        )\r\n      }\r\n    >\r\n      <h4>\r\n        <span className=\"sidebarChannel__hash\">#</span>\r\n        {channelName}\r\n      </h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChannel;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './Sidebar.css';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SignalCellular3BarIcon from '@material-ui/icons/SignalCellular3Bar';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport { Avatar } from '@material-ui/core';\r\nimport SidebarChannel from './SidebarChannel';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from './features/userSlice';\r\nimport { auth } from './firebase';\r\nimport  db  from './firebase';\r\n\r\nfunction Sidebar() {\r\n  const user = useSelector(selectUser);\r\n  const [channels, setChannels] = useState([]);\r\n  useEffect(()=>{\r\n    db.collection('channels').onSnapshot(snapshot=>(\r\n      setChannels(snapshot.docs.map(doc=>({\r\n        id: doc.id,\r\n        channel: doc.data(),\r\n      })))\r\n    ))\r\n  },[])\r\n\r\nconst handleAddChannel = () =>{\r\n  const channelName = prompt(\"Enter channel name\");\r\n  if (channelName) {\r\n    db.collection('channels').add({\r\n      channelName: channelName\r\n    })\r\n  }\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div class=\"sidebar__top\">\r\n        <h3>JMR dev Programmer</h3>\r\n        <ExpandMoreIcon />\r\n      </div>\r\n      <div className=\"sidebar__channels\">\r\n        <div className=\"sidebar__channelsHeader\">\r\n          <div className=\"sidebar__header\">\r\n            <ExpandMoreIcon />\r\n            <h4>Text channels</h4>\r\n          </div>\r\n          <AddIcon onClick={handleAddChannel} className=\"sidebar__addChannel\" />\r\n        </div>\r\n        <div className=\"sidebar__channelsList\">\r\n          {channels.map(({ id, channel }) => (\r\n            <SidebarChannel key={id} id={id} channelName={channel.channelName} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__voice\">\r\n        <SignalCellular3BarIcon\r\n          className=\"sidebar__voiceIcon\"\r\n          fontSize=\"large\"\r\n        />\r\n        <div className=\"sidebar__voiceInfo\">\r\n          <h3>Voice connected</h3>\r\n          <p>stream</p>\r\n        </div>\r\n        <div className=\"sidebar__voiceIcons\">\r\n          <InfoIcon />\r\n          <CallIcon />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__profile\">\r\n        <Avatar onClick={() => auth.signOut()} src={user.photo} />\r\n        <div className=\"sidebar__profileInfo\">\r\n          <h3>{user.displayName}</h3>\r\n          <p>#{user.uid.substring(0, 7)}</p>\r\n        </div>\r\n        <div className=\"sidebar__profileIcons\">\r\n          <MicIcon />\r\n          <HeadsetIcon />\r\n          <SettingsIcon />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","export default __webpack_public_path__ + \"static/media/logoIcon.5271ea68.svg\";","import { Button } from '@material-ui/core';\r\nimport { auth, provider } from './firebase';\r\nimport React from 'react';\r\n\r\nimport LogoIcon from './logoIcon.svg';\r\nimport './Login.css';\r\n\r\nfunction Login() {\r\n  const signIn = () => {\r\n    //    google login\r\n    auth.signInWithPopup(provider).catch((error) => alert(error.message));\r\n  };\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__logo\">\r\n        <img src={LogoIcon} alt=\"logo\" />\r\n      </div>\r\n      <Button onClick={signIn}>Sign In</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport Chat from './Chat';\nimport Sidebar from './Sidebar';\nimport { selectUser } from './features/userSlice';\nimport Login from './Login';\nimport { auth } from './firebase';\nimport { login, logout } from './features/userSlice';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const user = useSelector(selectUser);\n\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // console.log('user->>', authUser);\n        dispatch(\n          login({\n            uid: authUser.uid,\n            photo: authUser.photoURL,\n            email: authUser.email,\n            displayName: authUser.displayName,\n          })\n        );\n        // login\n      } else {\n        // logout\n        dispatch(logout());\n      }\n    });\n  }, [dispatch]);\n  return (\n    <div className=\"app\">\n      {user ? (\n        <>\n          <Sidebar />\n          <Chat />\n        </>\n      ) : (\n        <Login />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\nimport appReducer from '../features/appSlice';\n\nexport default configureStore({\n  reducer: {\n    user: userReducer,\n    app: appReducer,\n  },\n});\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport  store  from './app/store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}